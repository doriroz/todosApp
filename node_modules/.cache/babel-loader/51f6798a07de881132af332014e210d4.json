{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dorir\\\\Desktop\\\\\\u05D3\\u05D5\\u05E8\\u05D9 \\u05D2\\u05D9\\u05D1\\u05D5\\u05D9\\\\Apps\\\\todoApp\\\\todoReact\\\\src\\\\Components\\\\todosItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport classes from \"./todosItem.module.css\";\nimport { TodosContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodosItem = props => {\n  _s();\n\n  const todoCtx = useContext(TodosContext); // console.log(...TodosContext.todos);\n\n  todoCtx.todos.map(td => console.log(`todoContex : ${td.name}`));\n\n  const isChecked = td => {\n    console.log(td.active);\n    return td.active == true ? \"checked\" : \"\";\n  };\n\n  function deleteItem(todos, id) {\n    let item = todos.find(todoid => todoid.id == id);\n    let index = todos.indexOf(item);\n    todos.splice(index, 1);\n    todoCtx.saveTodos(todos);\n    todoCtx.setTodo(item);\n  }\n\n  function onClickEvent(e) {\n    deleteItem(todoCtx.todos, e.target.dataset.id);\n  } // ON LABEL\n  // onclick='onChangeEvent(event)'\n  // ondblclick='onDbClickEvent(event)'\n  // htmlFor={getId(props.todo.name)}\n\n\n  const isEditable = props.todo.isEditable > 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    value: props.todo.name,\n    \"data-id\": props.todo.id,\n    \"data-name\": props.todo.name,\n    onkeyup: \"onKeyDownTxt\",\n    onblur: \"onExitFocus\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n    \"data-name\": props.todo.name,\n    children: props.todo.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n\n  const onChangeEvent = e => {\n    e.preventDefault(); // setState(toggle(todosCtx.todos,e.target.dataset.id));\n  };\n\n  let style = styled.div``;\n\n  const toggle = (todos, id) => {\n    console.log(id);\n    let item = todos.filter(td => td.id == id);\n    let index = todos.indexOf(item);\n    item[index].active = !item[index].active;\n    todoCtx.saveTodos(todos);\n    todoCtx.setTodo(item);\n  }; // isChecked={isChecked(todoCtx)}\n  // data-id={todoCtx.id}\n\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.todosItem,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: isChecked(props.todo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), isEditable]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-id\": props.todo.id,\n      onClick: event => onClickEvent(event),\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this); // onclick={onClickEvent}\n}; // const getId = (name) => {\n//     return `id-${name}`;\n// }\n// function onKeyDownTxt(e) {\n//     if (e.code === \"Enter\") {\n//       setState(mapEditValue(e.target.dataset.name));\n//     }\n// }\n// function mapEditValue(name) {\n//     let new_todos = todoArr.filter((val) => val.name == name);\n//     for (let i = 0; i < new_todos.length; i++) {\n//       new_todos[i].name = name;\n//       new_todos[i].id = `id-${name}`;\n//     }\n//     return todoArr;\n// }\n// function onExitFocus(e) {\n//     for (let i = 0; i < todoArr.length; i++) {\n//       todoArr[i].isEditable = false;\n//       if (todoArr[i].name === e.target.dataset.name) {\n//         todoArr[i].id = `id-${e.target.value}`;\n//         todoArr[i].name = e.target.value;\n//       }\n//     }\n//     setLocalStorage(todoArr);\n//     render(todoArr, getListByStatus(todoArr, selectedTab), selectedTab);\n//   }\n// ${\n//     todo.isEditable > 0\n//       ? `<input type='text' value='${todo.name}' data-id=${todo.id} data-name=${todo.name} onkeyup='onKeyDownTxt' onblur='onExitFocus'>`\n//       : `<label for=${getId(todo.name)} data-name=${\n//           todo.name\n//         } onclick='onChangeEvent(event)' ondblclick='onDbClickEvent(event)'>${\n//           todo.name\n//         }</label>`\n//   }\n\n\n_s(TodosItem, \"Vu89Pgijtd6CsaslYGYiJ7mxtZs=\");\n\n_c = TodosItem;\nexport default TodosItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosItem\");","map":{"version":3,"sources":["C:/Users/dorir/Desktop/דורי גיבוי/Apps/todoApp/todoReact/src/Components/todosItem.js"],"names":["React","useContext","classes","TodosContext","TodosItem","props","todoCtx","todos","map","td","console","log","name","isChecked","active","deleteItem","id","item","find","todoid","index","indexOf","splice","saveTodos","setTodo","onClickEvent","e","target","dataset","isEditable","todo","onChangeEvent","preventDefault","style","styled","div","toggle","filter","todosItem","event"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport classes from \"./todosItem.module.css\";\r\nimport {TodosContext} from \"../App\";\r\n\r\nconst TodosItem = (props) => {\r\n    const todoCtx = useContext(TodosContext);\r\n    // console.log(...TodosContext.todos);\r\n    todoCtx.todos.map(td=>console.log(`todoContex : ${td.name}`));\r\n    \r\n    const isChecked = (td) => {\r\n        console.log(td.active);\r\n        return td.active == true ? \"checked\" : \"\";\r\n    }\r\n\r\n    function deleteItem(todos,id) {\r\n        let item = todos.find(todoid => todoid.id == id);\r\n        let index = todos.indexOf(item);\r\n        todos.splice(index, 1);\r\n\r\n        todoCtx.saveTodos(todos);\r\n        todoCtx.setTodo(item);\r\n    }\r\n\r\n    function onClickEvent(e) {\r\n        deleteItem(todoCtx.todos,e.target.dataset.id);\r\n    }\r\n\r\n    // ON LABEL\r\n    // onclick='onChangeEvent(event)'\r\n    // ondblclick='onDbClickEvent(event)'\r\n    // htmlFor={getId(props.todo.name)}\r\n    const isEditable = props.todo.isEditable > 0\r\n    ? <input type='text' value={props.todo.name} data-id={props.todo.id} data-name={props.todo.name} onkeyup='onKeyDownTxt' onblur='onExitFocus' />\r\n    : <label data-name={props.todo.name}>{props.todo.name}</label>;\r\n\r\n    \r\n    const onChangeEvent = (e) => {\r\n        e.preventDefault();\r\n        // setState(toggle(todosCtx.todos,e.target.dataset.id));\r\n    }\r\n\r\n    let style = styled.div``;\r\n\r\n    const toggle = (todos,id) => {\r\n        console.log(id);\r\n        let item = todos.filter((td) => td.id == id);\r\n        let index = todos.indexOf(item);\r\n        item[index].active = !item[index].active\r\n        \r\n        todoCtx.saveTodos(todos);\r\n        todoCtx.setTodo(item);\r\n    }\r\n\r\n    // isChecked={isChecked(todoCtx)}\r\n    // data-id={todoCtx.id}\r\n    return <li className={classes.todosItem}>\r\n        <div>\r\n        <input type=\"checkbox\" defaultChecked={isChecked(props.todo)}/>\r\n        {/* {props.todo.name} */}\r\n        {isEditable}\r\n        </div>\r\n        <button data-id={props.todo.id} onClick={(event)=>onClickEvent(event)}>&times;</button>\r\n    </li>\r\n    // onclick={onClickEvent}\r\n}\r\n\r\n\r\n\r\n\r\n// const getId = (name) => {\r\n//     return `id-${name}`;\r\n// }\r\n\r\n\r\n\r\n// function onKeyDownTxt(e) {\r\n//     if (e.code === \"Enter\") {\r\n//       setState(mapEditValue(e.target.dataset.name));\r\n//     }\r\n// }\r\n  \r\n// function mapEditValue(name) {\r\n//     let new_todos = todoArr.filter((val) => val.name == name);\r\n//     for (let i = 0; i < new_todos.length; i++) {\r\n//       new_todos[i].name = name;\r\n//       new_todos[i].id = `id-${name}`;\r\n//     }\r\n//     return todoArr;\r\n// }\r\n\r\n\r\n// function onExitFocus(e) {\r\n//     for (let i = 0; i < todoArr.length; i++) {\r\n//       todoArr[i].isEditable = false;\r\n//       if (todoArr[i].name === e.target.dataset.name) {\r\n//         todoArr[i].id = `id-${e.target.value}`;\r\n//         todoArr[i].name = e.target.value;\r\n//       }\r\n//     }\r\n//     setLocalStorage(todoArr);\r\n//     render(todoArr, getListByStatus(todoArr, selectedTab), selectedTab);\r\n//   }\r\n\r\n\r\n// ${\r\n//     todo.isEditable > 0\r\n//       ? `<input type='text' value='${todo.name}' data-id=${todo.id} data-name=${todo.name} onkeyup='onKeyDownTxt' onblur='onExitFocus'>`\r\n//       : `<label for=${getId(todo.name)} data-name=${\r\n//           todo.name\r\n//         } onclick='onChangeEvent(event)' ondblclick='onDbClickEvent(event)'>${\r\n//           todo.name\r\n//         }</label>`\r\n//   }\r\n\r\nexport default TodosItem;"]},"metadata":{},"sourceType":"module"}