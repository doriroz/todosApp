{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dorir\\\\Desktop\\\\\\u05D3\\u05D5\\u05E8\\u05D9 \\u05D2\\u05D9\\u05D1\\u05D5\\u05D9\\\\Apps\\\\todoApp\\\\todoReact\\\\src\\\\Components\\\\todosItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport classes from \"./todosItem.module.css\"; // import TodosContext from \"../todos-context\";\n// import { useContext } from \"react\";\n\nimport TodosContext from \"../todos-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodosItem = props => {\n  _s();\n\n  // console.log()\n  const todoCtx = useContext(TodosContext);\n  console.log(`todoContex : ${todoCtx.todos.name}`);\n\n  const isChecked = td => {\n    console.log(td.active); // return td.active == true ? \"\" : \"checked\";\n\n    return td.active == true ? \"checked\" : \"\";\n  }; // isChecked={isChecked(todoCtx)}\n  // data-id={todoCtx.id}\n\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.todosItem,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: isChecked(props.todo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), props.todo.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this); // onclick={onClickEvent}\n};\n\n_s(TodosItem, \"Vu89Pgijtd6CsaslYGYiJ7mxtZs=\");\n\n_c = TodosItem;\n\nfunction onExitFocus(e) {\n  for (let i = 0; i < todoArr.length; i++) {\n    todoArr[i].isEditable = false;\n\n    if (todoArr[i].name === e.target.dataset.name) {\n      todoArr[i].id = `id-${e.target.value}`;\n      todoArr[i].name = e.target.value;\n    }\n  }\n\n  setLocalStorage(todoArr);\n  render(todoArr, getListByStatus(todoArr, selectedTab), selectedTab);\n} // ${\n//     todo.isEditable > 0\n//       ? `<input type='text' value='${todo.name}' data-id=${todo.id} data-name=${todo.name} onkeyup='onKeyDownTxt' onblur='onExitFocus'>`\n//       : `<label for=${getId(todo.name)} data-name=${\n//           todo.name\n//         } onclick='onChangeEvent(event)' ondblclick='onDbClickEvent(event)'>${\n//           todo.name\n//         }</label>`\n//   }\n\n\nexport default TodosItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosItem\");","map":{"version":3,"sources":["C:/Users/dorir/Desktop/דורי גיבוי/Apps/todoApp/todoReact/src/Components/todosItem.js"],"names":["React","useContext","classes","TodosContext","TodosItem","props","todoCtx","console","log","todos","name","isChecked","td","active","todosItem","todo","onExitFocus","e","i","todoArr","length","isEditable","target","dataset","id","value","setLocalStorage","render","getListByStatus","selectedTab"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CACA;AACA;;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB;AACA,QAAMC,OAAO,GAAGL,UAAU,CAACE,YAAD,CAA1B;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeF,OAAO,CAACG,KAAR,CAAcC,IAAK,EAA/C;;AAEA,QAAMC,SAAS,GAAIC,EAAD,IAAQ;AACtBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,EAAE,CAACC,MAAf,EADsB,CAEtB;;AACA,WAAOD,EAAE,CAACC,MAAH,IAAa,IAAb,GAAoB,SAApB,GAAgC,EAAvC;AACH,GAJD,CALyB,CAWzB;AACA;;;AACA,sBAAO;AAAI,IAAA,SAAS,EAAEX,OAAO,CAACY,SAAvB;AAAA,4BACH;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,cAAc,EAAEH,SAAS,CAACN,KAAK,CAACU,IAAP;AAAhD;AAAA;AAAA;AAAA;AAAA,cADA,EAECV,KAAK,CAACU,IAAN,CAAWL,IAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAbyB,CAoBzB;AACH,CArBD;;GAAMN,S;;KAAAA,S;;AAyBN,SAASY,WAAT,CAAqBC,CAArB,EAAwB;AACpB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,OAAO,CAACC,MAA5B,EAAoCF,CAAC,EAArC,EAAyC;AACvCC,IAAAA,OAAO,CAACD,CAAD,CAAP,CAAWG,UAAX,GAAwB,KAAxB;;AACA,QAAIF,OAAO,CAACD,CAAD,CAAP,CAAWR,IAAX,KAAoBO,CAAC,CAACK,MAAF,CAASC,OAAT,CAAiBb,IAAzC,EAA+C;AAC7CS,MAAAA,OAAO,CAACD,CAAD,CAAP,CAAWM,EAAX,GAAiB,MAAKP,CAAC,CAACK,MAAF,CAASG,KAAM,EAArC;AACAN,MAAAA,OAAO,CAACD,CAAD,CAAP,CAAWR,IAAX,GAAkBO,CAAC,CAACK,MAAF,CAASG,KAA3B;AACD;AACF;;AACDC,EAAAA,eAAe,CAACP,OAAD,CAAf;AACAQ,EAAAA,MAAM,CAACR,OAAD,EAAUS,eAAe,CAACT,OAAD,EAAUU,WAAV,CAAzB,EAAiDA,WAAjD,CAAN;AACD,C,CAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAezB,SAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport classes from \"./todosItem.module.css\";\r\n// import TodosContext from \"../todos-context\";\r\n// import { useContext } from \"react\";\r\nimport TodosContext from \"../todos-context\";\r\n\r\nconst TodosItem = (props) => {\r\n    // console.log()\r\n    const todoCtx = useContext(TodosContext);\r\n    console.log(`todoContex : ${todoCtx.todos.name}`);\r\n    \r\n    const isChecked = (td) => {\r\n        console.log(td.active);\r\n        // return td.active == true ? \"\" : \"checked\";\r\n        return td.active == true ? \"checked\" : \"\";\r\n    }\r\n\r\n    // isChecked={isChecked(todoCtx)}\r\n    // data-id={todoCtx.id}\r\n    return <li className={classes.todosItem}>\r\n        <div>\r\n        <input type=\"checkbox\" defaultChecked={isChecked(props.todo)}/>\r\n        {props.todo.name}\r\n        </div>\r\n        <button>&times;</button>\r\n    </li>\r\n    // onclick={onClickEvent}\r\n}\r\n\r\n\r\n\r\nfunction onExitFocus(e) {\r\n    for (let i = 0; i < todoArr.length; i++) {\r\n      todoArr[i].isEditable = false;\r\n      if (todoArr[i].name === e.target.dataset.name) {\r\n        todoArr[i].id = `id-${e.target.value}`;\r\n        todoArr[i].name = e.target.value;\r\n      }\r\n    }\r\n    setLocalStorage(todoArr);\r\n    render(todoArr, getListByStatus(todoArr, selectedTab), selectedTab);\r\n  }\r\n\r\n\r\n// ${\r\n//     todo.isEditable > 0\r\n//       ? `<input type='text' value='${todo.name}' data-id=${todo.id} data-name=${todo.name} onkeyup='onKeyDownTxt' onblur='onExitFocus'>`\r\n//       : `<label for=${getId(todo.name)} data-name=${\r\n//           todo.name\r\n//         } onclick='onChangeEvent(event)' ondblclick='onDbClickEvent(event)'>${\r\n//           todo.name\r\n//         }</label>`\r\n//   }\r\n\r\nexport default TodosItem;"]},"metadata":{},"sourceType":"module"}