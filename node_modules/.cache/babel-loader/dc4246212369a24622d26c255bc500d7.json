{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dorir\\\\Desktop\\\\\\u05D3\\u05D5\\u05E8\\u05D9 \\u05D2\\u05D9\\u05D1\\u05D5\\u05D9\\\\Apps\\\\todoApp\\\\todoReact\\\\src\\\\Components\\\\todosItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef } from \"react\";\nimport classes from \"./todosItem.module.css\";\nimport { TodosContext } from \"../App\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodosItem = props => {\n  _s();\n\n  const todoInputRef = useRef();\n  const todosCtx = useContext(TodosContext); // // console.log(...TodosContext.todos);\n\n  todosCtx.todos.map(td => console.log(`todoContex : ${td.name}`));\n  const InActiveStyled = styled.label`\n        text-decoration:${props.todo.active == false ? \"line-through\" : \"none\"};\n        color:${props.todo.active == false ? \"#aaa\" : \"black\"};\n        font-style:${props.todo.active == false ? \"italic\" : \"none\"};    \n    `; // const isChecked = (td) => {\n  //     console.log(td.active);\n  //     return td.active == true ? \"checked\" : \"\";\n  // }\n  // const deleteItem = (todos,id) => {\n  //     let item = todos.find(todoid => todoid.id == id);\n  //     let index = todos.indexOf(item);\n  //     todos.splice(index, 1);\n  //     todosCtx.saveTodos(todos);\n  //     todosCtx.setTodo(item);\n  // }\n  // const toggle = (todos,id) => {\n  //     console.log(id);\n  //     let item = todos.find((td) => td.id == id);\n  //     console.log(item);\n  //     let index = todos.indexOf(item);\n  //     todos[index].active = !todos[index].active\n  //     todosCtx.saveTodos(todos);\n  //     todosCtx.setTodo(item);\n  // }\n\n  const setEditable = (todos, id) => {\n    let item = todos.find(td => td.id == id);\n    console.log(item);\n    let index = todos.indexOf(item);\n    todos[index].isEditable = true;\n    todosCtx.saveTodos(todos);\n    todosCtx.setTodo(item);\n  };\n\n  const mapEditValue = (todos, id) => {\n    console.log(todoInputRef.current.value);\n    let item = todos.find(td => td.id == id);\n    item.name = todoInputRef.current.value;\n    item.id = `id-${todoInputRef.current.value}`;\n    item.isEditable = false;\n    todosCtx.saveTodos(todos);\n    todosCtx.setTodo(item);\n  }; // const onClickEvent = (e) => {\n  //     deleteItem(todosCtx.todos,e.target.dataset.id);\n  // }\n  // const onChangeEvent = (e) => {\n  //     // e.preventDefault();\n  //     console.log(e.target.dataset.id);\n  //     toggle(todosCtx.todos,e.target.dataset.id);\n  // }\n\n\n  const onDbClickEvent = e => {\n    // e.preventDefault();\n    setEditable(todosCtx.todos, e.target.dataset.id);\n  };\n\n  const onKeyDownEvent = e => {\n    console.log(e.target.dataset.id);\n\n    if (e.code === \"Enter\") {\n      mapEditValue(todosCtx.todos, e.target.dataset.id);\n    }\n  }; // // ON LABEL\n  // // onclick='onChangeEvent(event)'\n  // // htmlFor={getId(props.todo.name)}\n\n\n  const isEditable = props.todo.isEditable > 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    defaultValue: props.todo.name,\n    \"data-id\": props.todo.id,\n    \"data-name\": props.todo.name,\n    ref: todoInputRef,\n    onKeyDown: event => {\n      onKeyDownEvent(event);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this) // onblur='onExitFocus' \n  // />\n  : /*#__PURE__*/_jsxDEV(InActiveStyled, {\n    \"data-id\": props.todo.id,\n    \"data-name\": props.todo.name,\n    onDoubleClick: event => {\n      onDbClickEvent(event);\n    },\n    children: props.todo.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.todosItem,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        \"data-id\": props.todo.id // defaultChecked={isChecked(props.todo)}\n        // onChange={(event=>{onChangeEvent(event)})}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), isEditable]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      \"data-id\": props.todo.id // onClick={(event)=>onClickEvent(event)}\n      ,\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 12\n  }, this);\n};\n\n_s(TodosItem, \"nb1Ecj+pU1CRJ2VImlYp0a5OlUs=\");\n\n_c = TodosItem;\nexport default TodosItem; // const getId = (name) => {\n//     return `id-${name}`;\n// }\n// function onExitFocus(e) {\n//     for (let i = 0; i < todoArr.length; i++) {\n//       todoArr[i].isEditable = false;\n//       if (todoArr[i].name === e.target.dataset.name) {\n//         todoArr[i].id = `id-${e.target.value}`;\n//         todoArr[i].name = e.target.value;\n//       }\n//     }\n//     setLocalStorage(todoArr);\n//     render(todoArr, getListByStatus(todoArr, selectedTab), selectedTab);\n//   }\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosItem\");","map":{"version":3,"sources":["C:/Users/dorir/Desktop/דורי גיבוי/Apps/todoApp/todoReact/src/Components/todosItem.js"],"names":["React","useContext","useRef","classes","TodosContext","styled","TodosItem","props","todoInputRef","todosCtx","todos","map","td","console","log","name","InActiveStyled","label","todo","active","setEditable","id","item","find","index","indexOf","isEditable","saveTodos","setTodo","mapEditValue","current","value","onDbClickEvent","e","target","dataset","onKeyDownEvent","code","event","todosItem"],"mappings":"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","sourcesContent":["import React, { useContext,useRef } from \"react\";\r\nimport classes from \"./todosItem.module.css\";\r\nimport {TodosContext} from \"../App\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TodosItem = (props) => {\r\n    const todoInputRef = useRef();\r\n    const todosCtx = useContext(TodosContext);\r\n    // // console.log(...TodosContext.todos);\r\n    todosCtx.todos.map(td=>console.log(`todoContex : ${td.name}`));\r\n\r\n    const InActiveStyled = styled.label`\r\n        text-decoration:${props.todo.active==false?\"line-through\":\"none\"};\r\n        color:${props.todo.active==false?\"#aaa\":\"black\"};\r\n        font-style:${props.todo.active==false?\"italic\":\"none\"};    \r\n    `;\r\n\r\n    // const isChecked = (td) => {\r\n    //     console.log(td.active);\r\n    //     return td.active == true ? \"checked\" : \"\";\r\n    // }\r\n\r\n    // const deleteItem = (todos,id) => {\r\n    //     let item = todos.find(todoid => todoid.id == id);\r\n    //     let index = todos.indexOf(item);\r\n    //     todos.splice(index, 1);\r\n\r\n    //     todosCtx.saveTodos(todos);\r\n    //     todosCtx.setTodo(item);\r\n    // }\r\n\r\n    \r\n    // const toggle = (todos,id) => {\r\n    //     console.log(id);\r\n    //     let item = todos.find((td) => td.id == id);\r\n    //     console.log(item);\r\n    //     let index = todos.indexOf(item);\r\n    //     todos[index].active = !todos[index].active\r\n        \r\n    //     todosCtx.saveTodos(todos);\r\n    //     todosCtx.setTodo(item);\r\n    // }\r\n\r\n    const setEditable = (todos,id) => {\r\n        let item = todos.find((td) => td.id == id);\r\n        console.log(item);\r\n        let index = todos.indexOf(item);\r\n        todos[index].isEditable = true;\r\n            \r\n        todosCtx.saveTodos(todos);\r\n        todosCtx.setTodo(item);\r\n    }\r\n\r\n    const mapEditValue = (todos,id) => {\r\n        console.log(todoInputRef.current.value);\r\n        let item = todos.find((td) => td.id == id);\r\n        item.name = todoInputRef.current.value;\r\n        item.id = `id-${todoInputRef.current.value}`;\r\n        item.isEditable = false;\r\n\r\n        todosCtx.saveTodos(todos);\r\n        todosCtx.setTodo(item);\r\n    }\r\n\r\n    // const onClickEvent = (e) => {\r\n    //     deleteItem(todosCtx.todos,e.target.dataset.id);\r\n    // }\r\n\r\n    // const onChangeEvent = (e) => {\r\n    //     // e.preventDefault();\r\n    //     console.log(e.target.dataset.id);\r\n    //     toggle(todosCtx.todos,e.target.dataset.id);\r\n    // }\r\n\r\n    const onDbClickEvent = (e) => {\r\n        // e.preventDefault();\r\n        setEditable(todosCtx.todos,e.target.dataset.id);\r\n    }\r\n\r\n    const onKeyDownEvent = (e) => {  \r\n        console.log(e.target.dataset.id);    \r\n        if (e.code === \"Enter\") {\r\n            mapEditValue(todosCtx.todos,e.target.dataset.id);\r\n        }\r\n    }\r\n\r\n    // // ON LABEL\r\n    // // onclick='onChangeEvent(event)'\r\n    // // htmlFor={getId(props.todo.name)}\r\n    const isEditable = props.todo.isEditable > 0\r\n    ? <input \r\n        type='text' \r\n        defaultValue={props.todo.name} \r\n        data-id={props.todo.id} \r\n        data-name={props.todo.name} \r\n        ref={todoInputRef}\r\n        onKeyDown={event=>{onKeyDownEvent(event)}} />\r\n        // onblur='onExitFocus' \r\n        // />\r\n    : <InActiveStyled \r\n        data-id={props.todo.id}\r\n        data-name={props.todo.name}\r\n        onDoubleClick={event=>{onDbClickEvent(event)}}>{props.todo.name}</InActiveStyled>;\r\n        \r\n    return <li className={classes.todosItem}>\r\n        <div>\r\n        <input \r\n            type=\"checkbox\" \r\n            data-id={props.todo.id} \r\n            // defaultChecked={isChecked(props.todo)}\r\n            // onChange={(event=>{onChangeEvent(event)})}\r\n            />\r\n        {/* {props.todo.name} */}\r\n        {isEditable}\r\n        </div>\r\n        {/* <a \r\n           href='#' \r\n           data-id={props.todo.id}\r\n           onClick={event=>{onDbClickEvent(event)}}><i class=\"fas fa-edit\"></i></a> */}\r\n        <button \r\n            data-id={props.todo.id} \r\n            // onClick={(event)=>onClickEvent(event)}\r\n            >&times;</button>\r\n    </li>\r\n}\r\n\r\n\r\nexport default TodosItem;\r\n\r\n\r\n// const getId = (name) => {\r\n//     return `id-${name}`;\r\n// }\r\n\r\n// function onExitFocus(e) {\r\n//     for (let i = 0; i < todoArr.length; i++) {\r\n//       todoArr[i].isEditable = false;\r\n//       if (todoArr[i].name === e.target.dataset.name) {\r\n//         todoArr[i].id = `id-${e.target.value}`;\r\n//         todoArr[i].name = e.target.value;\r\n//       }\r\n//     }\r\n//     setLocalStorage(todoArr);\r\n//     render(todoArr, getListByStatus(todoArr, selectedTab), selectedTab);\r\n//   }\r\n\r\n"]},"metadata":{},"sourceType":"module"}