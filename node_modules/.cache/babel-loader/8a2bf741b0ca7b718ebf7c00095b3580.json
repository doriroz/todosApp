{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dorir\\\\Desktop\\\\\\u05D3\\u05D5\\u05E8\\u05D9 \\u05D2\\u05D9\\u05D1\\u05D5\\u05D9\\\\Apps\\\\todoApp\\\\todoReact\\\\src\\\\Components\\\\todosItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport classes from \"./todosItem.module.css\"; // import TodosContext from \"../todos-context\";\n// import { useContext } from \"react\";\n\nimport TodosContext from \"../todos-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodosItem = props => {\n  _s();\n\n  // console.log()\n  const todoCtx = useContext(TodosContext);\n  console.log(`todoContex : ${todoCtx.todos.name}`);\n\n  const isChecked = td => {\n    console.log(td.active); // return td.active == true ? \"\" : \"checked\";\n\n    return td.active == true ? \"checked\" : \"\";\n  };\n\n  const onChangeEvent = e => {\n    e.preventDefault();\n    setState(toggle(e.target.dataset.id));\n  };\n\n  const toggle = (todos, id) => {\n    console.log(id);\n    let item = todos.filter(val => val.id == id);\n    item[0].active = !item[0].active;\n    console.log(todos);\n    return todos;\n  }; // isChecked={isChecked(todoCtx)}\n  // data-id={todoCtx.id}\n\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.todosItem,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: isChecked(props.todo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), props.todo.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this); // onclick={onClickEvent}\n};\n\n_s(TodosItem, \"Vu89Pgijtd6CsaslYGYiJ7mxtZs=\");\n\n_c = TodosItem;\n\nconst getId = name => {\n  return `id-${name}`;\n};\n\nconst isEditable = todo => {\n  return todo.isEditable > 0 ? /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    value: \"${todo.name}\",\n    \"data-id\": todo.id,\n    \"data-name\": todo.name,\n    onkeyup: \"onKeyDownTxt\",\n    onblur: \"onExitFocus\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n    for: getId(todo.name),\n    \"data-name\": todo.name,\n    onclick: \"onChangeEvent(event)\",\n    ondblclick: \"onDbClickEvent(event)\",\n    children: todo.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}; // function onKeyDownTxt(e) {\n//     if (e.code === \"Enter\") {\n//       setState(mapEditValue(e.target.dataset.name));\n//     }\n// }\n// function mapEditValue(name) {\n//     let new_todos = todoArr.filter((val) => val.name == name);\n//     for (let i = 0; i < new_todos.length; i++) {\n//       new_todos[i].name = name;\n//       new_todos[i].id = `id-${name}`;\n//     }\n//     return todoArr;\n// }\n// function onExitFocus(e) {\n//     for (let i = 0; i < todoArr.length; i++) {\n//       todoArr[i].isEditable = false;\n//       if (todoArr[i].name === e.target.dataset.name) {\n//         todoArr[i].id = `id-${e.target.value}`;\n//         todoArr[i].name = e.target.value;\n//       }\n//     }\n//     setLocalStorage(todoArr);\n//     render(todoArr, getListByStatus(todoArr, selectedTab), selectedTab);\n//   }\n// ${\n//     todo.isEditable > 0\n//       ? `<input type='text' value='${todo.name}' data-id=${todo.id} data-name=${todo.name} onkeyup='onKeyDownTxt' onblur='onExitFocus'>`\n//       : `<label for=${getId(todo.name)} data-name=${\n//           todo.name\n//         } onclick='onChangeEvent(event)' ondblclick='onDbClickEvent(event)'>${\n//           todo.name\n//         }</label>`\n//   }\n\n\nexport default TodosItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodosItem\");","map":{"version":3,"sources":["C:/Users/dorir/Desktop/דורי גיבוי/Apps/todoApp/todoReact/src/Components/todosItem.js"],"names":["React","useContext","classes","TodosContext","TodosItem","props","todoCtx","console","log","todos","name","isChecked","td","active","onChangeEvent","e","preventDefault","setState","toggle","target","dataset","id","item","filter","val","todosItem","todo","getId","isEditable"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport classes from \"./todosItem.module.css\";\r\n// import TodosContext from \"../todos-context\";\r\n// import { useContext } from \"react\";\r\nimport TodosContext from \"../todos-context\";\r\n\r\nconst TodosItem = (props) => {\r\n    // console.log()\r\n    const todoCtx = useContext(TodosContext);\r\n    console.log(`todoContex : ${todoCtx.todos.name}`);\r\n    \r\n    const isChecked = (td) => {\r\n        console.log(td.active);\r\n        // return td.active == true ? \"\" : \"checked\";\r\n        return td.active == true ? \"checked\" : \"\";\r\n    }\r\n\r\n    const onChangeEvent = (e) => {\r\n        e.preventDefault();\r\n        setState(toggle(e.target.dataset.id));\r\n      }\r\n\r\n    const toggle = (todos,id) => {\r\n        console.log(id);\r\n        let item = todos.filter((val) => val.id == id);\r\n      \r\n        item[0].active = !item[0].active;\r\n        console.log(todos);\r\n        return todos;\r\n    }\r\n\r\n    // isChecked={isChecked(todoCtx)}\r\n    // data-id={todoCtx.id}\r\n    return <li className={classes.todosItem}>\r\n        <div>\r\n        <input type=\"checkbox\" defaultChecked={isChecked(props.todo)}/>\r\n        {props.todo.name}\r\n        </div>\r\n        <button>&times;</button>\r\n    </li>\r\n    // onclick={onClickEvent}\r\n}\r\n\r\n\r\n\r\n\r\nconst getId = (name) => {\r\n    return `id-${name}`;\r\n}\r\n\r\nconst isEditable = (todo) => {\r\n    return todo.isEditable > 0\r\n    ? <input type='text' value='${todo.name}' data-id={todo.id} data-name={todo.name} onkeyup='onKeyDownTxt' onblur='onExitFocus' />\r\n    : <label for={getId(todo.name)} data-name={todo.name} onclick='onChangeEvent(event)' ondblclick='onDbClickEvent(event)'>{todo.name}</label>\r\n}\r\n\r\n// function onKeyDownTxt(e) {\r\n//     if (e.code === \"Enter\") {\r\n//       setState(mapEditValue(e.target.dataset.name));\r\n//     }\r\n// }\r\n  \r\n// function mapEditValue(name) {\r\n//     let new_todos = todoArr.filter((val) => val.name == name);\r\n//     for (let i = 0; i < new_todos.length; i++) {\r\n//       new_todos[i].name = name;\r\n//       new_todos[i].id = `id-${name}`;\r\n//     }\r\n//     return todoArr;\r\n// }\r\n\r\n\r\n// function onExitFocus(e) {\r\n//     for (let i = 0; i < todoArr.length; i++) {\r\n//       todoArr[i].isEditable = false;\r\n//       if (todoArr[i].name === e.target.dataset.name) {\r\n//         todoArr[i].id = `id-${e.target.value}`;\r\n//         todoArr[i].name = e.target.value;\r\n//       }\r\n//     }\r\n//     setLocalStorage(todoArr);\r\n//     render(todoArr, getListByStatus(todoArr, selectedTab), selectedTab);\r\n//   }\r\n\r\n\r\n// ${\r\n//     todo.isEditable > 0\r\n//       ? `<input type='text' value='${todo.name}' data-id=${todo.id} data-name=${todo.name} onkeyup='onKeyDownTxt' onblur='onExitFocus'>`\r\n//       : `<label for=${getId(todo.name)} data-name=${\r\n//           todo.name\r\n//         } onclick='onChangeEvent(event)' ondblclick='onDbClickEvent(event)'>${\r\n//           todo.name\r\n//         }</label>`\r\n//   }\r\n\r\nexport default TodosItem;"]},"metadata":{},"sourceType":"module"}